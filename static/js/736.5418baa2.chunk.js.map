{"version":3,"file":"static/js/736.5418baa2.chunk.js","mappings":"uUAEMA,EAAU,mCACVC,EAAW,+BAEJC,EAAc,mCAAG,8FACfC,EAAAA,EAAAA,IAAA,UAAaF,EAAb,uBAA4C,CACvDG,OAAQ,CACNC,QAAQ,GAAD,OAAKL,GACZM,KAAM,KAJkB,mFAAH,qDASdC,EAAU,mCAAG,WAAMC,GAAN,iFACXL,EAAAA,EAAAA,IAAA,UACRF,EADQ,+BACuBO,EADvB,8CAEX,CACEJ,OAAQ,CACNC,QAAQ,GAAD,OAAKL,MALM,mFAAH,sDAWVS,EAAa,mCAAG,WAAMC,GAAN,iFACdP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,mBAAoD,CAC/DN,OAAQ,CACNC,QAAQ,GAAD,OAAKL,MAHW,mFAAH,sDAQbW,EAAI,mCAAG,WAAMD,GAAN,iFACLP,EAAAA,EAAAA,IAAA,UAAaF,EAAb,kBAA+BS,EAA/B,2BAA4D,CACvEN,OAAQ,CACNC,QAAQ,GAAD,OAAKL,MAHE,mFAAH,sDAQJY,EAAO,mCAAG,WAAMF,GAAN,iFACRP,EAAAA,EAAAA,IAAA,UACRF,EADQ,kBACUS,EADV,kCAEX,CACEN,OAAQ,CACNC,QAAQ,GAAD,OAAKL,MALG,mFAAH,sDAWPa,EAAgB,SAAAC,GAO3B,OANsBA,EACnBC,KAAI,SAAAC,GACH,OAAOA,EAAGC,IACX,IACAC,KAAK,KAGT,C,iICzDYC,EAAKC,EAAAA,GAAAA,GAAH,4EAMFC,EAAKD,EAAAA,GAAAA,GAAH,yC,SCyCf,EA7Ca,WACX,OAAsCE,EAAAA,EAAAA,UAAS,MAA/C,eAAOC,EAAP,KAAoBC,EAApB,KACMpB,GAASqB,EAAAA,EAAAA,MACTC,EAAYC,OAAOvB,EAAOwB,WAahC,OAVAC,EAAAA,EAAAA,YAAU,YACRlB,EAAAA,EAAAA,IAAKe,GACFI,MAAK,YAAe,IAAZC,EAAW,EAAXA,KAEPP,EAAeO,EAAKpB,KACrB,IACAqB,OAAM,SAAAC,GAAG,OAAIC,QAAQC,IAAIF,EAAhB,GACb,GAAE,CAACP,KAIF,8BACGH,GAAeA,EAAYa,OAAS,GACnC,+BACE,SAACjB,EAAD,UACGI,EAAYR,KACX,YAAqD,IAAlDsB,EAAiD,EAAjDA,aAAcC,EAAmC,EAAnCA,UAAWC,EAAwB,EAAxBA,cAAe7B,EAAS,EAATA,GACzC,OACE,UAACW,EAAD,YACE,gBACEmB,IAAG,8CAAyCH,GAC5CI,IAAKF,EACLG,MAAM,SAER,uBAAIH,KACJ,4CAAkBD,OAPX5B,EAUZ,SAKP,yBAAK,4CAIZ,C","sources":["api/api.js","components/Cast/Cast.styled.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\n\nconst API_KEY = 'f6b5dfee4ed71b77313e17116e40108d';\nconst BASE_URL = 'https://api.themoviedb.org/3';\n\nexport const trendingMovies = async () => {\n  return await axios.get(`${BASE_URL}/trending/movie/day`, {\n    params: {\n      api_key: `${API_KEY}`,\n      page: 1,\n    },\n  });\n};\n\nexport const serchMovie = async movie => {\n  return await axios.get(\n    `${BASE_URL}/search/movie?query=${movie}&include_adult=false&language=en-US&page=1`,\n    {\n      params: {\n        api_key: `${API_KEY}`,\n      },\n    }\n  );\n};\n\nexport const moviesDetails = async id => {\n  return await axios.get(`${BASE_URL}/movie/${id}?language=en-US`, {\n    params: {\n      api_key: `${API_KEY}`,\n    },\n  });\n};\n\nexport const cast = async id => {\n  return await axios.get(`${BASE_URL}/movie/${id}/credits?language=en-US`, {\n    params: {\n      api_key: `${API_KEY}`,\n    },\n  });\n};\n\nexport const reviews = async id => {\n  return await axios.get(\n    `${BASE_URL}/movie/${id}/reviews?language=en-US&page=1`,\n    {\n      params: {\n        api_key: `${API_KEY}`,\n      },\n    }\n  );\n};\n\nexport const fileredGenres = arr => {\n  const filtredIdName = arr\n    .map(el => {\n      return el.name;\n    })\n    .join(', ');\n\n  return filtredIdName;\n};\n","import styled from 'styled-components';\n\n\nexport const Ul = styled.ul`\n  display: flex;\n  gap: 15px;\n  flex-wrap: wrap;\n`;\n\nexport const Li = styled.li`\n  width: 200px;\n`;","import { useEffect, useState } from 'react';\nimport { cast } from 'api/api';\nimport { useParams } from 'react-router-dom';\nimport { Ul, Li } from './Cast.styled';\n\nconst Cast = () => {\n  const [detailsData, setDetailsData] = useState(null);\n  const params = useParams();\n  const detailsId = Number(params.movieName);\n  //   console.log(Number(params.movieName));\n\n  useEffect(() => {\n    cast(detailsId)\n      .then(({ data }) => {\n        // console.log(data.cast);\n        setDetailsData(data.cast);\n      })\n      .catch(err => console.log(err));\n  }, [detailsId]);\n  // console.log(detailsData);\n\n  return (\n    <>\n      {detailsData && detailsData.length > 0 ? (\n        <>\n          <Ul>\n            {detailsData.map(\n              ({ profile_path, character, original_name, id }) => {\n                return (\n                  <Li key={id}>\n                    <img\n                      src={`https://image.tmdb.org/t/p/original/${profile_path}`}\n                      alt={original_name}\n                      width=\"200\"\n                    />\n                    <p>{original_name}</p>\n                    <p>{`Character: ${character}`}</p>\n                  </Li>\n                );\n              }\n            )}\n          </Ul>\n        </>\n      ) : (\n        <div>We don't have any cast for this movie.</div>\n      )}\n    </>\n  );\n};\n\nexport default Cast;\n"],"names":["API_KEY","BASE_URL","trendingMovies","axios","params","api_key","page","serchMovie","movie","moviesDetails","id","cast","reviews","fileredGenres","arr","map","el","name","join","Ul","styled","Li","useState","detailsData","setDetailsData","useParams","detailsId","Number","movieName","useEffect","then","data","catch","err","console","log","length","profile_path","character","original_name","src","alt","width"],"sourceRoot":""}